<node-list>
  <extern-def>
    <func-proto>
      <func:print>
      <node-list>
        <parameter:x: string>
      <prim-type:nil>
  <func-def>
    <func-proto>
      <func:main>
      <node-list>
        <parameter:args: [string]>
      <prim-type:int>
    <scope>
      <node-list>
        <for>
          <def-expr:a: string>
          <use-expr:(args:unknown)>
          <scope>
            <node-list>
              <expr-stmt>
                <call-expr>
                  <op:call>
                  <node-list>
                    <use-expr:(print:unknown)>
                    <use-expr:(a:unknown)>
              <expr-stmt>
                <call-expr>
                  <op:call>
                  <node-list>
                    <use-expr:(print:unknown)>
                    <string-expr:"\n">
        <return>
          <int-expr:0>

================================================================================
extern print(x: string): nil
main(args: [string]): int {
  for a: string = (args:unknown) {
    (call, (print:unknown), (a:unknown))
    (call, (print:unknown), "\n")
  }
  return 0
}
================================================================================
